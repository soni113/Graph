class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        Queue<Integer> q = new LinkedList<>();
        int[] topo = new int[V];
        int[] inDegree = new int[V];
        
        for(int i=0; i<V; i++){
            for(Integer it:adj.get(i)){
                inDegree[it] += 1;
            }
        }
        for(int i=0; i<V; i++){
            if(inDegree[i] == 0){
                q.offer(i);
            }
        }
        int i=0;
        while(!q.isEmpty()){
            Integer node = q.poll();
            topo[i++] = node;
            for(Integer it:adj.get(node)){
                inDegree[it] -= 1;
                if(inDegree[it] == 0){
                    q.add(it);
                }
            }
        }
        return topo;
    }
}
